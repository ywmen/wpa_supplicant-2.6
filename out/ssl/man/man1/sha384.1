.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH DGST 1 "1.0.1s" "1/Mar/2016" "OpenSSL"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
dgst, sha, sha1, mdc2, ripemd160, sha224, sha256, sha384, sha512, md2, md4, md5, dss1 \- message digests
.SH "SYNOPSIS"
\fBopenssl\fR \fBdgst\fR 
[\fB\-sha|\-sha1|\-mdc2|\-ripemd160|\-sha224|\-sha256|\-sha384|\-sha512|\-md2|\-md4|\-md5|\-dss1\fR]
[\fB\-c\fR]
[\fB\-d\fR]
[\fB\-hex\fR]
[\fB\-binary\fR]
[\fB\-r\fR]
[\fB\-non-fips-allow\fR]
[\fB\-out filename\fR]
[\fB\-sign filename\fR]
[\fB\-keyform arg\fR]
[\fB\-passin arg\fR]
[\fB\-verify filename\fR]
[\fB\-prverify filename\fR]
[\fB\-signature filename\fR]
[\fB\-hmac key\fR]
[\fB\-non-fips-allow\fR]
[\fB\-fips-fingerprint\fR]
[\fBfile...\fR]
.PP
\fBopenssl\fR
[\fIdigest\fR]
[\fB...\fR]
.SH "DESCRIPTION"
The digest functions output the message digest of a supplied file or files
in hexadecimal.  The digest functions also generate and verify digital
signatures using message digests.
.SH "OPTIONS"
.Ip "\fB\-c\fR" 4
print out the digest in two digit groups separated by colons, only relevant if
\fBhex\fR format output is used.
.Ip "\fB\-d\fR" 4
print out \s-1BIO\s0 debugging information.
.Ip "\fB\-hex\fR" 4
digest is to be output as a hex dump. This is the default case for a \*(L"normal\*(R"
digest as opposed to a digital signature.  See \s-1NOTES\s0 below for digital
signatures using \fB\-hex\fR.
.Ip "\fB\-binary\fR" 4
output the digest or signature in binary form.
.Ip "\fB\-r\fR" 4
output the digest in the \*(L"coreutils\*(R" format used by programs like \fBsha1sum\fR.
.Ip "\fB\-non-fips-allow\fR" 4
Allow use of non \s-1FIPS\s0 digest when in \s-1FIPS\s0 mode.  This has no effect when not in
\s-1FIPS\s0 mode.
.Ip "\fB\-out filename\fR" 4
filename to output to, or standard output by default.
.Ip "\fB\-sign filename\fR" 4
digitally sign the digest using the private key in \*(L"filename\*(R".
.Ip "\fB\-keyform arg\fR" 4
Specifies the key format to sign digest with. The \s-1DER\s0, \s-1PEM\s0, P12,
and \s-1ENGINE\s0 formats are supported.
.Ip "\fB\-engine id\fR" 4
Use engine \fBid\fR for operations (including private key storage).
This engine is not used as source for digest algorithms, unless it is
also specified in the configuration file.
.Ip "\fB\-sigopt nm:v\fR" 4
Pass options to the signature algorithm during sign or verify operations.
Names and values of these options are algorithm-specific.
.Ip "\fB\-passin arg\fR" 4
the private key password source. For more information about the format of \fBarg\fR
see the \fB\s-1PASS\s0 \s-1PHRASE\s0 \s-1ARGUMENTS\s0\fR section in openssl(1).
.Ip "\fB\-verify filename\fR" 4
verify the signature using the the public key in \*(L"filename\*(R".
The output is either \*(L"Verification \s-1OK\s0\*(R" or \*(L"Verification Failure\*(R".
.Ip "\fB\-prverify filename\fR" 4
verify the signature using the  the private key in \*(L"filename\*(R".
.Ip "\fB\-signature filename\fR" 4
the actual signature to verify.
.Ip "\fB\-hmac key\fR" 4
create a hashed \s-1MAC\s0 using \*(L"key\*(R".
.Ip "\fB\-mac alg\fR" 4
create \s-1MAC\s0 (keyed Message Authentication Code). The most popular \s-1MAC\s0
algorithm is \s-1HMAC\s0 (hash-based \s-1MAC\s0), but there are other \s-1MAC\s0 algorithms
which are not based on hash, for instance \fBgost-mac\fR algorithm,
supported by \fBccgost\fR engine. \s-1MAC\s0 keys and other options should be set
via \fB\-macopt\fR parameter.
.Ip "\fB\-macopt nm:v\fR" 4
Passes options to \s-1MAC\s0 algorithm, specified by \fB\-mac\fR key.
Following options are supported by both by \fB\s-1HMAC\s0\fR and \fBgost-mac\fR:
.Ip "\fBkey:string\fR" 12
Specifies \s-1MAC\s0 key as alphnumeric string (use if key contain printable
characters only). String length must conform to any restrictions of
the \s-1MAC\s0 algorithm for example exactly 32 chars for gost-mac.
.Ip "\fBhexkey:string\fR" 12
Specifies \s-1MAC\s0 key in hexadecimal form (two hex digits per byte).
Key length must conform to any restrictions of the \s-1MAC\s0 algorithm
for example exactly 32 chars for gost-mac.
.Ip "\fB\-rand file(s)\fR" 4
a file or files containing random data used to seed the random number
generator, or an \s-1EGD\s0 socket (see RAND_egd(3)).
Multiple files can be specified separated by a \s-1OS\s0\-dependent character.
The separator is \fB;\fR for \s-1MS\s0\-Windows, \fB,\fR for OpenVMS, and \fB:\fR for
all others. 
.Ip "\fB\-non-fips-allow\fR" 4
enable use of non-\s-1FIPS\s0 algorithms such as \s-1MD5\s0 even in \s-1FIPS\s0 mode.
.Ip "\fB\-fips-fingerprint\fR" 4
compute \s-1HMAC\s0 using a specific key
for certain OpenSSL\-\s-1FIPS\s0 operations.
.Ip "\fBfile...\fR" 4
file or files to digest. If no files are specified then standard input is
used.
.SH "EXAMPLES"
To create a hex-encoded message digest of a file:
 openssl dgst \-md5 \-hex file.txt
.PP
To sign a file using SHA\-256 with binary file output:
 openssl dgst \-sha256 \-sign privatekey.pem \-out signature.sign file.txt
.PP
To verify a signature:
 openssl dgst \-sha256 \-verify publickey.pem \e
 \-signature signature.sign \e
 file.txt
.SH "NOTES"
The digest of choice for all new applications is SHA1. Other digests are
however still widely used.
.PP
When signing a file, \fBdgst\fR will automatically determine the algorithm
(RSA, ECC, etc) to use for signing based on the private key's ASN.1 info.
When verifying signatures, it only handles the RSA, DSA, or ECDSA signature
itself, not the related data to identify the signer and algorithm used in
formats such as x.509, CMS, and S/MIME.
.PP
A source of random numbers is required for certain signing algorithms, in
particular ECDSA and DSA.
.PP
The signing and verify options should only be used if a single file is
being signed or verified.
.PP
Hex signatures cannot be verified using \fBopenssl\fR.  Instead, use \*(L"xxd \-r\*(R"
or similar program to transform the hex signature into a binary signature
prior to verification.

.rn }` ''
.IX Title "DGST 1"
.IX Name "dgst, sha, sha1, mdc2, ripemd160, sha224, sha256, sha384, sha512, md2, md4, md5, dss1 - message digests"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "OPTIONS"

.IX Item "\fB\-c\fR"

.IX Item "\fB\-d\fR"

.IX Item "\fB\-hex\fR"

.IX Item "\fB\-binary\fR"

.IX Item "\fB\-r\fR"

.IX Item "\fB\-non-fips-allow\fR"

.IX Item "\fB\-out filename\fR"

.IX Item "\fB\-sign filename\fR"

.IX Item "\fB\-keyform arg\fR"

.IX Item "\fB\-engine id\fR"

.IX Item "\fB\-sigopt nm:v\fR"

.IX Item "\fB\-passin arg\fR"

.IX Item "\fB\-verify filename\fR"

.IX Item "\fB\-prverify filename\fR"

.IX Item "\fB\-signature filename\fR"

.IX Item "\fB\-hmac key\fR"

.IX Item "\fB\-mac alg\fR"

.IX Item "\fB\-macopt nm:v\fR"

.IX Item "\fBkey:string\fR"

.IX Item "\fBhexkey:string\fR"

.IX Item "\fB\-rand file(s)\fR"

.IX Item "\fB\-non-fips-allow\fR"

.IX Item "\fB\-fips-fingerprint\fR"

.IX Item "\fBfile...\fR"

.IX Header "EXAMPLES"

.IX Header "NOTES"

